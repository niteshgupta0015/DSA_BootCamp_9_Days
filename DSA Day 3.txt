Insertion Logic -

void enQueue(Circular Queue" q, int

value) (

if (isFull(q)) {

printf("Queue is full!\n");

return;

1

if (q->front == -1) {

q->front = 0;

q->rear (q->rear + 1) % SIZE;

q->items[q->rear] = value;

printf("Inserted sed\n", value);

Deletion Logic

int de Queue(CircularQueue" q) (

int element;

if (isEmpty(q)) (

printf("Queue is

empty!\n");

return -1;

} else {

element q->items[9- >front

]; if (q->front == q->rear) {

q->front = -1;

q->rear = -1;

} else {

q->front (q-front + 1) % SIZE

} printf("Deleted %d\n", element),

Display Logic

Void display(Circular Queue" 9)

int i if (isEmpty(4))

{ printf("Queue is empty!\n"))

else

printf("Front->d\n", 9- >front);

printf("Items->

for (i=q->front: i!= q- rear, i = (i+1) % SIZE)

printf("d", q->items[1]):